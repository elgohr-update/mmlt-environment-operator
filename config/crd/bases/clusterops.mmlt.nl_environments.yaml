
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: environments.clusterops.mmlt.nl
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Ready")].reason
    name: Status
    type: string
  - JSONPath: .status.conditions[?(@.type=="Ready")].message
    name: Message
    type: string
  group: clusterops.mmlt.nl
  names:
    kind: Environment
    listKind: EnvironmentList
    plural: environments
    singular: environment
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Environment is an environment at a cloud-provider with one or more
        Kubernetes clusters, addons, conformance tested.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: EnvironmentSpec defines the desired state of an Environment.
          properties:
            clusters:
              description: Clusters defines the values specific for each cluster instance.
              items:
                description: ClusterSpec defines cluster specific infra, K8s resources
                  and tests.
                properties:
                  addons:
                    description: ClusterAddonSpec defines the Kubernetes resources
                      to deploy to have a functioning cluster.
                    properties:
                      jobs:
                        description: Jobs is an array of paths to job files in the
                          source tree.
                        items:
                          type: string
                        type: array
                      source:
                        description: Source is the repository that contains the k8s
                          addons resources.
                        properties:
                          ref:
                            description: Ref is the reference to the content to get.
                              For type=git it can be 'master', 'refs/heads/my-branch'
                              etc, see 'git reference' doc.
                            type: string
                          token:
                            description: Token is used to authenticate with the remote
                              server. For Type=git; - Token or ~/.ssh key should be
                              specified (azure devops requires the token to be prefixed
                              with 'x:')
                            type: string
                          type:
                            description: 'Type is the type of repository to use as
                              a source. Valid values are: - "git" (default): GIT repository.
                              - "local": local filesystem.'
                            enum:
                            - git
                            - local
                            type: string
                          url:
                            description: URL is the URL of the repo. When Token is
                              specified the URL is expected to start with 'https://'.
                            type: string
                        type: object
                      x:
                        additionalProperties:
                          type: string
                        description: X are extension values (when regular values don't
                          fit the need)
                        type: object
                    type: object
                  infra:
                    description: Infra defines cluster specific infrastructure.
                    properties:
                      pools:
                        additionalProperties:
                          description: NodepoolSpec defines a cluster worker node
                            pool.
                          properties:
                            maxScale:
                              description: Max number of VM's. Setting MaxScale >
                                Scale enables autoscaling.
                              maximum: 100
                              minimum: 1
                              type: integer
                            scale:
                              description: Number of VM's.
                              maximum: 100
                              minimum: 1
                              type: integer
                            vmSize:
                              description: Type of VM's.
                              type: string
                          type: object
                        description: Cluster worker pools. NB. For AKS a pool named
                          'default' must be defined.
                        type: object
                      subnetNum:
                        description: Cluster ordinal number starting at 1. (max 2^subnetNewbits-1)
                        minimum: 1
                        type: integer
                      version:
                        description: Kubernetes version.
                        type: string
                      x:
                        additionalProperties:
                          type: string
                        description: X are extension values (when regular values don't
                          fit the need)
                        type: object
                    type: object
                  name:
                    description: Name is the cluster name.
                    type: string
                  test:
                    description: ClusterAddonSpec defines what conformance test to
                      run.
                    type: object
                type: object
              type: array
            defaults:
              description: Defaults defines the values common to all Clusters.
              properties:
                addons:
                  description: ClusterAddonSpec defines the Kubernetes resources to
                    deploy to have a functioning cluster.
                  properties:
                    jobs:
                      description: Jobs is an array of paths to job files in the source
                        tree.
                      items:
                        type: string
                      type: array
                    source:
                      description: Source is the repository that contains the k8s
                        addons resources.
                      properties:
                        ref:
                          description: Ref is the reference to the content to get.
                            For type=git it can be 'master', 'refs/heads/my-branch'
                            etc, see 'git reference' doc.
                          type: string
                        token:
                          description: Token is used to authenticate with the remote
                            server. For Type=git; - Token or ~/.ssh key should be
                            specified (azure devops requires the token to be prefixed
                            with 'x:')
                          type: string
                        type:
                          description: 'Type is the type of repository to use as a
                            source. Valid values are: - "git" (default): GIT repository.
                            - "local": local filesystem.'
                          enum:
                          - git
                          - local
                          type: string
                        url:
                          description: URL is the URL of the repo. When Token is specified
                            the URL is expected to start with 'https://'.
                          type: string
                      type: object
                    x:
                      additionalProperties:
                        type: string
                      description: X are extension values (when regular values don't
                        fit the need)
                      type: object
                  type: object
                infra:
                  description: Infra defines cluster specific infrastructure.
                  properties:
                    pools:
                      additionalProperties:
                        description: NodepoolSpec defines a cluster worker node pool.
                        properties:
                          maxScale:
                            description: Max number of VM's. Setting MaxScale > Scale
                              enables autoscaling.
                            maximum: 100
                            minimum: 1
                            type: integer
                          scale:
                            description: Number of VM's.
                            maximum: 100
                            minimum: 1
                            type: integer
                          vmSize:
                            description: Type of VM's.
                            type: string
                        type: object
                      description: Cluster worker pools. NB. For AKS a pool named
                        'default' must be defined.
                      type: object
                    subnetNum:
                      description: Cluster ordinal number starting at 1. (max 2^subnetNewbits-1)
                      minimum: 1
                      type: integer
                    version:
                      description: Kubernetes version.
                      type: string
                    x:
                      additionalProperties:
                        type: string
                      description: X are extension values (when regular values don't
                        fit the need)
                      type: object
                  type: object
                name:
                  description: Name is the cluster name.
                  type: string
                test:
                  description: ClusterAddonSpec defines what conformance test to run.
                  type: object
              type: object
            destroy:
              description: Destroy is true when an environment needs to be removed.
                Typically used in cluster delete/create test cases.
              type: boolean
            infra:
              description: Infra defines infrastructure that much exist before clusters
                can be created.
              properties:
                aad:
                  description: AAD is the Azure Active Directory that is queried when
                    a k8s user authorization is checked.
                  properties:
                    clientAppID:
                      type: string
                    serverAppID:
                      type: string
                    serverAppSecret:
                      type: string
                    tenantID:
                      type: string
                  type: object
                az:
                  description: AZ values.
                  properties:
                    availabilityZones:
                      description: AvailabilityZones String of integers, for example
                        "[1,2]"
                      type: string
                    dns:
                      description: DNS is an optional list of custom DNS servers.
                        (VM's in VNet need to be restarted to propagate changes to
                        this value)
                      items:
                        type: string
                      type: array
                    outbound:
                      description: 'Outbound sets the network outbound type. Valid
                        values are: - loadBalancer (default) - userDefinedRoute'
                      enum:
                      - loadBalancer
                      - userDefinedRoute
                      type: string
                    resourceGroup:
                      description: ResourceGroup
                      type: string
                    routes:
                      description: Routes is an optional list of routes
                      items:
                        description: AZRoute is an entry in the routing table of the
                          VNet.
                        properties:
                          addressPrefix:
                            type: string
                          name:
                            type: string
                          nextHopInIPAddress:
                            type: string
                          nextHopType:
                            type: string
                        type: object
                      type: array
                    sku:
                      description: 'SKU (stock keeping unit) sets the SLA on the AKS
                        control plane. Valid values are: - Free (default) - Paid'
                      enum:
                      - Free
                      - Paid
                      type: string
                    subnetNewbits:
                      description: Subnet newbits is the number of bits to add to
                        the VNet address mask to produce the subnet mask. IOW 2^subnetNewbits-1
                        is the max number of clusters in the VNet. For example given
                        a /16 VNetCIDR and subnetNewbits=4 would result in /20 subnets.
                      type: integer
                    subscription:
                      description: Subscription
                      type: string
                    vnetCIDR:
                      description: The VNet CIDR that connects one or more clusters.
                      type: string
                    x:
                      additionalProperties:
                        type: string
                      description: X are extension values (when regular values don't
                        fit the need)
                      type: object
                  type: object
                envDomain:
                  description: EnvDomain is the most significant part of the domain
                    name for this environment. For example; example.com
                  type: string
                envName:
                  description: EnvName is the name of this environment. Typically
                    a concatenation of region, cloud provider and environment type
                    (test, production).
                  type: string
                main:
                  description: Main is the path in the source tree to main.tf.
                  type: string
                source:
                  description: Source is the repository that contains Terraform infrastructure
                    code.
                  properties:
                    ref:
                      description: Ref is the reference to the content to get. For
                        type=git it can be 'master', 'refs/heads/my-branch' etc, see
                        'git reference' doc.
                      type: string
                    token:
                      description: Token is used to authenticate with the remote server.
                        For Type=git; - Token or ~/.ssh key should be specified (azure
                        devops requires the token to be prefixed with 'x:')
                      type: string
                    type:
                      description: 'Type is the type of repository to use as a source.
                        Valid values are: - "git" (default): GIT repository. - "local":
                        local filesystem.'
                      enum:
                      - git
                      - local
                      type: string
                    url:
                      description: URL is the URL of the repo. When Token is specified
                        the URL is expected to start with 'https://'.
                      type: string
                  type: object
                state:
                  description: State is where Terraform state is stored. If omitted
                    state is stored locally.
                  properties:
                    resourceGroup:
                      type: string
                    storageAccount:
                      type: string
                  type: object
              type: object
            policy:
              description: 'Policy specifies what operator behavior is allowed. Valid
                values are: - "AllowAll" (default): allows create, update and delete
                of environment and clusters; - "DenyDelete": forbids deletion of a
                cluster; - "DenyUpdate": forbids update/delete of a cluster.'
              enum:
              - AllowAll
              - DenyDelete
              - DenyUpdate
              type: string
          type: object
        status:
          description: EnvironmentStatus defines the observed state of an Environment.
          properties:
            conditions:
              description: Conditions are a synopsis of the StepStates.
              items:
                description: EnvironmentCondition provides a synopsis of the current
                  environment state. See KEP sig-api-machinery/1623-standardize-conditions
                  is going to introduce it as k8s.io/apimachinery/pkg/apis/meta/v1
                properties:
                  lastTransitionTime:
                    description: Last time the condition transitioned from one status
                      to another. This should be when the underlying condition changed.  If
                      that is not known, then using the time when the API field changed
                      is acceptable.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition in
                      CamelCase.
                    type: string
                  status:
                    description: Status of the condition, one of True, False, Unknown.
                    type: string
                  type:
                    description: Type of condition in CamelCase.
                    type: string
                required:
                - lastTransitionTime
                - reason
                - status
                - type
                type: object
              type: array
            steps:
              additionalProperties:
                description: StepStatus is the last observed status of a Step.
                properties:
                  hash:
                    description: An opaque value representing the config/parameters
                      applied by the step.
                    type: string
                  lastTransitionTime:
                    description: Last time the state transitioned. This should be
                      when the underlying condition changed.  If that is not known,
                      then using the time when the API field changed is acceptable.
                    format: date-time
                    type: string
                  message:
                    description: A human readable message indicating details about
                      the transition.
                    type: string
                  state:
                    description: The reason for the StepState's last transition in
                      CamelCase.
                    type: string
                required:
                - lastTransitionTime
                - state
                type: object
              description: Step contains the latest available observations of the
                Environment's state.
              type: object
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
